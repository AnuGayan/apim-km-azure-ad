diff --git a/components/azure.key.manager/src/main/java/org/wso2/azure/client/ApplicationClient.java b/components/azure.key.manager/src/main/java/org/wso2/azure/client/ApplicationClient.java
index 2e141b6..1250337 100644
--- a/components/azure.key.manager/src/main/java/org/wso2/azure/client/ApplicationClient.java
+++ b/components/azure.key.manager/src/main/java/org/wso2/azure/client/ApplicationClient.java
@@ -56,6 +56,13 @@ public interface ApplicationClient {
 	@Headers("ConsistencyLevel: eventual")
 	public ClientInformationList searchByAppId(@Param("appId") String id) throws KeyManagerClientException;;
 
+	/***
+	 * @param id Application ID
+	 * @throws KeyManagerClientException If application retrieval failed
+	 */
+	@RequestLine("GET /v1.0/applications(appId='{appid}')")
+	public ClientInformation getApplicationByAppId(@Param("appid") String id) throws KeyManagerClientException;
+
 	/***
 	 * 
 	 * @return Client Information
diff --git a/components/azure.key.manager/src/main/java/org/wso2/azure/client/AzureADClient.java b/components/azure.key.manager/src/main/java/org/wso2/azure/client/AzureADClient.java
index 3ee15e1..877cf6d 100644
--- a/components/azure.key.manager/src/main/java/org/wso2/azure/client/AzureADClient.java
+++ b/components/azure.key.manager/src/main/java/org/wso2/azure/client/AzureADClient.java
@@ -37,6 +37,7 @@ import org.wso2.carbon.apimgt.impl.AbstractKeyManager;
 import org.wso2.carbon.apimgt.impl.kmclient.KMClientErrorDecoder;
 import org.wso2.carbon.apimgt.impl.kmclient.KeyManagerClientException;
 import org.wso2.carbon.apimgt.impl.recommendationmgt.AccessTokenGenerator;
+import feign.Logger;
 
 import java.text.SimpleDateFormat;
 import java.util.Collections;
@@ -82,7 +83,7 @@ public class AzureADClient extends AbstractKeyManager {
                 .encoder(new GsonEncoder())
                 .decoder(new GsonDecoder())
                 .errorDecoder(new KMClientErrorDecoder())
-                .logger(new Slf4jLogger());
+                .logger(new Slf4jLogger(ApplicationClient.class)).logLevel(Logger.Level.FULL);
     }
 
     @Override
@@ -260,9 +261,13 @@ public class AzureADClient extends AbstractKeyManager {
     @Override
     public OAuthApplicationInfo mapOAuthApplication(OAuthAppRequest oAuthAppRequest) throws APIManagementException {
         String consumerKey = oAuthAppRequest.getOAuthApplicationInfo().getClientId();
-
+        OAuthApplicationInfo clientInfo = null;
         if (StringUtils.isNotBlank(consumerKey)) {
-            OAuthApplicationInfo clientInfo = retrieveApplication(consumerKey);
+            try{
+            clientInfo = this.getOAuthApplicationInfo(appClient.getApplicationByAppId(consumerKey));
+            } catch (KeyManagerClientException e1 ) {
+            handleException("Azure AD Application not found for the given consumer key " + consumerKey + " ", e1);
+        }
             if (clientInfo == null) {
                 String msg = "Something went wrong while getting OAuth application for given consumer key "
                         + consumerKey;
